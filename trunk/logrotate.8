.TH LOGROTATE 8 "Mon Nov 18 1996"
.UC 4
.SH NAME
logrotate \- rotates, compresses, and mails system logs
.SH SYNOPSIS
\fBlogrotate\fR [-dv] [-s|--state \fIfile\fR] \fIconfig_file\fR+
.SH DESCRIPTION
\fBlogrotate\fR is designed to ease administration of systems that generate
large numbers of log files.  It allows automatic rotation, compression, 
removal, and mailing of log files.  Each log file may be handled daily,
weekly, monthly, or when it grows too large.

Normally, \fBlogrotate\fR is run as a daily cron job.  It will not modify
a log multiple times in one day unless the criterium for that log is
based on the log's size and \fBlogrotate\fR is being run multiple times
each day. 

Any number of config files may be given on the command line. Later config
files may override the options given in earlier files, so the order
in which the \fBlogrotate\fR config files are listed in is important.
Normally, a single config file which includes any other config files
which are needed should be used.  See below for more information on how
to use the \fIinclude\fR directive to accomplish this.  If a directory
is given on the command line, every file in that directory is used as
a config file.

.SH OPTIONS
.TP
\fB-d\fR
Turns on debug mode and implies \fB-v\fR.  In debug mode, no changes will
be made to the logs or to the \fBlogrotate\fR state file.

.TP
\fB-s, -\-state <statefile>\fR
Tells \fBlogrotate\fR to use an alternate state file.  This is useful
if logrotate is being run as a different user for various sets of
log files.  The default state file is \fB/var/lib/logrotate.status\fR.

.TP
\fB-\-usage\fR
Prints the a short usage, version, and copyright message.

.SH CONFIGURATION FILE

\fBlogrotate\fR reads everything about the log files it should be handling
from the series of configuration files specified on the command line.  Each
configuration file can set global options (local definitions override
global ones, and later definitions override earlier ones) and specify
a logfile to rotate. A simple configuration file looks like this:

.nf
.ta +3i
# sample logrotate configuration file
errors sysadmin@my.org
compress

/var/log/messages {
    rotate 5
    weekly
    postrotate
	/sbin/killall -HUP syslogd
    endscript
}

/var/log/httpd/access.log {
    rotate 5
    mail www@my.org
    errors www@my.org
    size=100k
    postrotate
	/sbin/killall -HUP httpd
    endscript
}

/var/log/xferlog {
    monthly
    rotate 2
    errors ftpadmin@my.org
    # most ftp daemons don't handle HUP
    nocompress
}
.fi

.pp
The first few lines set global options; any errors that occur during log
file processing are mailed to sysadmin@my.org and logs are compressed after
they are rotated.  Note that comments may appear anywhere in the config
file as long as the first non-whitespace character on the line is a #.

The next section of the config files defined how to handle the log file
\fI/var/log/messages\fR. The log will go through five weekly rotations before
being removed. After the log file has been rotated (but before the old
version of the log has been compressed), the command 
\fI/sbin/killall -HUP syslogd\fR will be executed.

The next section defines the parameters for \fI/var/log/httpd/access.log\fR.
It is rotated whenever is grows over 100k is size, and the old logs
files are mailed (uncompressed) to www@my.org after going through 5
rotations, rather then being removed. Likewise, any errors that occur
while processing the log file are also mailed to www@my.org (overriding
the global \fIerrors\fR directive).

The last section definest the parameters for \fI/var/log/xferlog\fR.
It is rotated on a monthly basis, and the errors are mailed to
ftpadmin@my.org.  The rotated log files are not compressed, because
wu-ftpd doesn't handle HUP properly.

Here is more information on the directives which may be included in
a \fBlogrotate\fR configuration file:

.TP
\fBcompress\fR
Old versions of log files are compressed with \fBgzip\fR. See also
\fBnocompress\fR.

.TP
\fBdaily\fR
Log files are rotated every day.

.TP
\fBerrors \fIaddress\fR
Any errors that occur during log file processing are mailed to the
given address.

.TP
\fBinclude \fIfile_or_directory\fR
Reads the file given as an argument as if it was included inline where
the \fBinclude\fR directive appears. If a directory is given, most of the
files in that directory are read before processing of the including file
continues. The only files which are ignored are files whose names end
with .rpmorig, .rpmsave, or ~.  The \fBinclude\fR directive may not appear 
inside of a log
file definition. 

.TP
\fBmonthly\fR
Log files are rotated on the first day of every month.

\fBnocompress\fR
Old versions of log files are not compressed with \fBgzip\fR. See also
\fBcompress\fR. 

.TP
\fBpostrotate\fR/\fBendscript\fR
The lines between \fIpostrotate\fR and \fIendscript\fR (both of which
must appear on lines by themselves) are executed after the log file is
rotated. These directives may only appear inside of a log file definition.
See \fBprerotate\fR as well.

.TP
\fBprerotate\fR/\fBendscript\fR
The lines between \fBprerotate\fR and \fBendscript\fR (both of which
must appear on lines by themselves) are executed before the log file is
rotated. These directives may only appear inside of a log file definition.
See \fBpostrotate\fR as well.

.TP
\fBrotate \fIcount\fR
Log files are rotated <count> times before being removed or mailed to the
address specified in a \fBmail\fR directive. If \fIcount\fR is 0, old versions
are removed rather then rotated.

.TP
\fBsize \fIsize\fR
Log files are rotated when they grow bigger then \fIsize\fR bytes. If
\fIsize\fR is followed by \fIM\fR, the size if assumed to be in megabytes.
If the \fIk\fR is used, the size is in kilobytes. So \fBsize 100\fR,
\fIsize 100k\fR, and \fIsize 100M\fR are all valid.

.TP
\fBweekly\fR
Log files are rotated on the first day of the week.


.SH FILES
.PD 0
.TP 27
\fI/var/lib/logrotate.status\fR
Default state file.

.SH SEE ALSO
.IR gzip (1)

.SH AUTHOR
.nf
Erik Troan <ewt@redhat.com>
.fi
