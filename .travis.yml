os: linux
dist: trusty
language: c

git:
  depth: 3

jobs:
  include:
    - compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-4.4
      env: COMPILER=gcc-4.4
    - compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-4.6
      env: COMPILER=gcc-4.6
    - compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-4.7
      env: COMPILER=gcc-4.7
    - compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-4.8
      env: COMPILER=gcc-4.8
    - compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-4.9
      env: COMPILER=gcc-4.9
    - compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-5
      env: COMPILER=gcc-5
    - compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-6
      env: COMPILER=gcc-6
    - compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-8
      env: COMPILER=gcc-8
    - compiler: clang
      addons:
        apt:
          packages:
            - clang-3.4
      env: COMPILER=clang
    - compiler: clang
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.5
          packages:
            - clang-3.5
      env: COMPILER=clang-3.5
    - compiler: clang
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.6
          packages:
            - clang-3.6
      env: COMPILER=clang-3.6
    - compiler: clang
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.7
          packages:
            - clang-3.7
      env: COMPILER=clang-3.7
    - compiler: clang-11
      dist: bionic
      addons:
        apt:
          sources:
            - sourceline: 'deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-11 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages:
            - clang-11
      env:
        - COMPILER=clang-11
        - CFLAGS='-O1 -g -fsanitize=address -fsanitize-address-use-after-scope -fno-omit-frame-pointer -fsanitize=undefined -fsanitize=nullability -fsanitize=implicit-conversion -fsanitize=integer -fsanitize=float-divide-by-zero -fsanitize=local-bounds'
        - ASAN_OPTIONS=strict_string_checks=1:detect_stack_use_after_return=1:check_initialization_order=1:strict_init_order=1
        - UBSAN_OPTIONS=print_stacktrace=1:print_summary=1:halt_on_error=1
        - LSAN_OPTIONS=suppressions=test/leak_san_supress.txt
    - compiler: clang-11
      dist: bionic
      addons:
        apt:
          sources:
            - sourceline: 'deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-11 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages:
            - clang-11
            - clang-tools-11
      env: COMPILER=scan-build-11

install:
  - sudo add-apt-repository ppa:dns/gnu -y
  - sudo apt-get -qq update
  - sudo apt-get -qq install libpopt-dev libselinux1-dev libacl1-dev automake dash rpm acl

script:
  - ./autogen.sh
  - |
    if [[ "${COMPILER}" =~ ^scan-build.* ]]; then
      ${COMPILER} -analyze-headers --status-bugs ./configure --enable-werror --disable-silent-rules
      ${COMPILER} -analyze-headers --status-bugs make
      export TRAVIS_TEST_RESULT=$?
      travis_terminate $TRAVIS_TEST_RESULT;
    fi
  - $COMPILER --version
  - ./configure --enable-werror --disable-silent-rules CC=$COMPILER
  - make
  - make -j9 check || ( cat test/test-suite.log; exit 1; )
  # scan for Sanitizer output
  - grep -riP 'sanitizer|runtime error' test/*.log; test $? -eq 1
  # unset Sanitizer CFLAGS for distcheck
  - unset CFLAGS
  - make -j9 distcheck
  # nodeps because rpm build deps cannot be installed on debian system
  - make rpm RPM_FLAGS="--nodeps"
  - sed 's|/bin/bash|/bin/dash|' -i test/*.sh && make -j9 check
  # make sure that no tabs appear in the source code files
  - grep -P '\t' config.c log.{c,h} logrotate.{c,h}; test $? -eq 1
  # check for whitespace issues
  - git diff-tree --check $(git hash-object -t tree /dev/null) HEAD

notifications:
  email:
    recipients:
      - logrotate-owner@fedoraproject.org
    on_success: always
    on_failure: always

# vim:et:ts=2:sw=2
